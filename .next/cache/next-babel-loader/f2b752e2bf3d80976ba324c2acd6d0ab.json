{"ast":null,"code":"var _jsxFileName = \"/Users/rianc/Coding/Portfolio NEXTJS/projectRianCNEW/src/components/modal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ModalVideo from 'react-modal-video';\nimport { useVideoState, useVideoDispatch } from 'contexts/video/video.provider';\n\nfunction Modal() {\n  _s();\n\n  var url = useVideoState('url');\n  var isOpen = useVideoState('isOpen');\n  var dispatch = useVideoDispatch();\n\n  var handleVideoClose = function handleVideoClose() {\n    dispatch({\n      type: 'SET_CLOSE'\n    });\n  };\n\n  return __jsx(ModalVideo, {\n    channel: \"youtube\",\n    isOpen: isOpen,\n    videoId: url,\n    onClose: handleVideoClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(Modal, \"6hIm4rkP21deX/9ZPYpTq01ZlTc=\", false, function () {\n  return [useVideoState, useVideoState, useVideoDispatch];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/rianc/Coding/Portfolio NEXTJS/projectRianCNEW/src/components/modal.js"],"names":["React","ModalVideo","useVideoState","useVideoDispatch","Modal","url","isOpen","dispatch","handleVideoClose","type"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,+BAAhD;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,MAAMC,GAAG,GAAGH,aAAa,CAAC,KAAD,CAAzB;AACA,MAAMI,MAAM,GAAGJ,aAAa,CAAC,QAAD,CAA5B;AAEA,MAAMK,QAAQ,GAAGJ,gBAAgB,EAAjC;;AACA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,SACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,MAAM,EAAEH,MAFV;AAGE,IAAA,OAAO,EAAED,GAHX;AAIE,IAAA,OAAO,EAAEG,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;GAhBQJ,K;UACKF,a,EACGA,a,EAEEC,gB;;;KAJVC,K;AAkBT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport ModalVideo from 'react-modal-video';\nimport { useVideoState, useVideoDispatch } from 'contexts/video/video.provider';\n\nfunction Modal() {\n  const url = useVideoState('url');\n  const isOpen = useVideoState('isOpen');\n\n  const dispatch = useVideoDispatch();\n  const handleVideoClose = () => {\n    dispatch({ type: 'SET_CLOSE' });\n  };\n  return (\n    <ModalVideo\n      channel=\"youtube\"\n      isOpen={isOpen}\n      videoId={url}\n      onClose={handleVideoClose}\n    />\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}